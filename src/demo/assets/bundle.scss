$vx-linear-channel-values: 0 .0003035269835488375 .000607053967097675 .0009105809506465125 .00121410793419535 .0015176349177441874 .001821161901293025 .0021246888848418626 .0024282158683907 .0027317428519395373 .003035269835488375 .003346535763899161 .003676507324047436 .004024717018496307 .004391442037410293 .004776953480693729 .005181516702338386 .005605391624202723 .006048833022857054 .006512090792594475 .006995410187265387 .007499032043226175 .008023192985384994 .008568125618069307 .009134058702220787 .00972121732023785 .010329823029626936 .010960094006488246 .011612245179743885 .012286488356915872 .012983032342173012 .013702083047289686 .014443843596092545 .01520851442291271 .01599629336550963 .016807375752887384 .017641954488384078 .018500220128379697 .019382360956935723 .0202885630566524 .021219010376003555 .022173884793387385 .02315336617811041 .024157632448504756 .02518685962736163 .026241221894849898 .027320891639074894 .028426039504420793 .0295568344378088 .030713443732993635 .03189603307301153 .033104766570885055 .03433980680868217 .03560131487502034 .03688945040110004 .0382043715953465 .03954623527673284 .04091519690685319 .042311410620809675 .043735029256973465 .04518620438567554 .046665086336880095 .04817182422688942 .04970656598412723 .05126945837404324 .052860647023180246 .05448027644244237 .05612849004960009 .05780543019106723 .0595112381629812 .06124605423161761 .06301001765316767 .06480326669290577 .06662593864377289 .06847816984440017 .07036009569659588 .07227185068231748 .07421356838014963 .07618538148130785 .07818742180518633 .08021982031446832 .0822827071298148 .08437621154414882 .08650046203654976 .08865558628577294 .09084171118340768 .09305896284668745 .0953074666309647 .09758734714186246 .09989872824711389 .10224173308810132 .10461648409110419 .10702310297826761 .10946171077829933 .1119324278369056 .11443537382697373 .11697066775851084 .11953842798834562 .12213877222960187 .12477181756095049 .12743768043564743 .1301364766903643 .13286832155381798 .13563332965520566 .13843161503245183 .14126329114027164 .14412847085805777 .14702726649759498 .14995978981060856 .15292615199615017 .1559264637078274 .1589608350608804 .162029375639111 .1651321945016676 .16826940018969075 .1714411007328226 .17464740365558504 .17788841598362912 .18116424424986022 .184474994500441 .18782077230067787 .19120168274079138 .1946178304415758 .19806931955994886 .20155625379439707 .20507873639031693 .20863687014525575 .21223075741405523 .21586050011389926 .2195261997292692 .2232279573168085 .22696587351009836 .23074004852434915 .23455058216100522 .238397573812271 .24228112246555486 .24620132670783548 .25015828472995344 .25415209433082675 .2581828529215958 .26225065752969623 .26635560480286247 .2704977910130658 .27467731206038465 .2788942634768104 .2831487404299921 .2874408377269175 .29177064981753587 .2961382707983211 .3005437944157765 .3049873140698863 .30946892281750854 .31398871337571754 .31854677812509186 .32314320911295075 .3277780980565422 .33245153634617935 .33716361504833037 .3419144249086609 .3467040563550296 .35153259950043936 .3564001441459435 .3613067797835095 .3662525955988395 .3712376804741491 .3762621229909065 .38132601143253014 .386429433787049 .39157247774972326 .39675523072562685 .4019777798321958 .4072402119017367 .41254261348390375 .4178850708481375 .4232676699860717 .4286904966139066 .43415363617474895 .4396571738409188 .44520119451622786 .45078578283822346 .45641102318040466 .4620769996544071 .467783796112159 .47353149614800955 .4793201831008268 .4851499400560704 .4910208498478356 .4969329950608704 .5028864580325687 .5088813208549338 .5149176653765214 .5209955732043543 .5271151257058131 .5332764040105052 .5394794890121072 .5457244613701866 .5520114015120001 .5583403896342679 .5647115057049292 .5711248294648731 .5775804404296506 .5840784178911641 .5906188409193369 .5972017883637634 .6038273388553378 .6104955708078648 .6172065624196511 .6239603916750761 .6307571363461468 .6375968739940326 .6444796819705821 .6514056374198242 .6583748172794485 .665387298282272 .6724431569576875 .6795424696330938 .6866853124353135 .6938717612919899 .7011018919329731 .7083757798916868 .7156935005064807 .7230551289219693 .7304607400903537 .7379104087727308 .7454042095403874 .7529422167760779 .7605245046752924 .768151147247507 .7758222183174236 .7835377915261935 .7912979403326302 .799102738014409 .8069522576692516 .8148465722161012 .8227857543962835 .8307698767746546 .83879901174074 .846873231509858 .8549926081242338 .8631572134541023 .8713671191987972 .8796223968878317 .8879231178819663 .8962693533742664 .9046611743911496 .9130986517934192 .9215818562772946 .9301108583754237 .938685728457888 .9473065367331999 .9559733532492861 .9646862478944651 .9734452903984125 .9822505503331171 .9911020971138298 1;

// Calculate the luminance for a color.
// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
@function vx-luminance($color) {
  $red: nth($vx-linear-channel-values, red($color) + 1);
  $green: nth($vx-linear-channel-values, green($color) + 1);
  $blue: nth($vx-linear-channel-values, blue($color) + 1);

  @return .2126 * $red + .7152 * $green + .0722 * $blue;
}

// Calculate the contrast ratio between two colors.
// See https://www.w3.org/TR/WCAG20-TECHS/G17.html#G17-tests
@function vx-contrast($back, $front) {
  $backLum: vx-luminance($back) + .05;
  $foreLum: vx-luminance($front) + .05;

  @return max($backLum, $foreLum) / min($backLum, $foreLum);
}

@function vx-darker-color($color1, $color2) {
  @if (vx-luminance($color1) > vx-luminance($color2)) {
    @return $color2;
  } @else {
    @return $color1;
  }
}

@function vx-lighter-color($color1, $color2) {
  @if (vx-luminance($color1) > vx-luminance($color2)) {
    @return $color1;
  } @else {
    @return $color2;
  }
}

$defaultColors: (
  primary: #3fa0bd,
  background: #fcfcfc,
  foreground: black,
  error: #bf0000,
  success: #51a351,
  warn: #f89406,
  accent: #FFCA4F
);

$vxPreparedMaps: ();
@function vx-prepare-colors($colors: ()) {
  $hash: "#{$colors}";
  @if map_has_key($vxPreparedMaps, $hash) {
    @return map_get($vxPreparedMaps, $hash);
  }

  $colors: map-merge($defaultColors, $colors);

  $primary: map_get($colors, primary);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $error: map_get($colors, error);
  $success: map_get($colors, success);
  $warn: map_get($colors, warn);
  $accent: map_get($colors, accent);
  $darkerBgFg: vx-darker-color($background, $foreground);
  $lighterBgFg: vx-lighter-color($background, $foreground);
  $borderLight: mix($darkerBgFg, $lighterBgFg, 40%);
  $borderDark: mix($darkerBgFg, $lighterBgFg, 50%);

  $result: map-merge($colors, (
    darkerBgFg: $darkerBgFg,
    lighterBgFg: $lighterBgFg,
    borderLight: $borderLight,
    borderDark: $borderDark
  ));

  $vxPreparedMaps: map_merge($vxPreparedMaps, ($hash: $result)) !global;
  @return $result;
}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-checkbox-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $border: mix($foreground, $background, 40%);

  vx-checkbox {
    &:hover .checkbox {
      background: mix($foreground, $background, 3%)
    }
    &:active .checkbox {
      background: mix($foreground, $background, 10%)
    }

    &:focus .checkbox {
      box-shadow: 0 0 2px 1px transparentize($primary, .5);
    }

    .checkbox {
      border: 1px solid $border;

      &:after {
        border-right: 4px solid $primary;
        border-top: 4px solid $primary;
      }
    }

    &[vx-accent] {
      .checkbox {
        &:after {
          border-right: 4px solid $accent;
          border-top: 4px solid $accent;
        }
      }
      &:focus .checkbox {
        box-shadow: 0 0 2px 1px transparentize($accent, .5);
      }
    }
  }

}

@mixin vx-input-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map-get($colors, primary);
  $background: map-get($colors, background);
  $foreground: map-get($colors, foreground);
  $accent: map-get($colors, accent);
  $error: map-get($colors, error);

  $darkerBgFg: map-get($colors, darkerBgFg);
  $lighterBgFg: map-get($colors, lighterBgFg);

  $placeholder: mix($darkerBgFg, $lighterBgFg, 30%);
  $labelColor: map_get($colors, borderLight);

  vx-input-wrapper {
    .container {
      border: 1px solid $labelColor;
    }
    .label, .requiredLabel {
      color: $labelColor;
    }
    [vxInput] {
      color: $foreground;
    }
    [vxInput]::-webkit-input-placeholder {
      color: $placeholder;
    }

    &.focused {
      .container {
        border-color: $primary;
        box-shadow: 0 0 3px $primary;
      }
      .label {
        color: $primary;
      }
      .requiredLabel {
        color: $accent;
      }
      input::-webkit-input-placeholder {
        color: mix($foreground, $placeholder, 10%);
      }
    }

    &.invalid {
      .container {
        border-color: $error;
      }

      .label {
        color: $error;
      }
      .requiredLabel {
        color: mix($accent, $error);
      }

      input::-webkit-input-placeholder {
        color: mix($error, $placeholder, 10%);
      }

      .hasFocus input::-webkit-input-placeholder {
        color: mix($error, $placeholder, 20%);
      }

      &.focused .container {
        box-shadow: 0 0 3px $error;
      }
    }
  }

}

@mixin vx-tabs-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $foreground: map_get($colors, foreground);
  $background: map_get($colors, background);
  $borderColor: mix($foreground, $background, 25%);

  $tabColor: mix($foreground, $background, 15%);
  $tabHoverColor: mix($foreground, $background, 6%);
  $tabActiveColor: mix($foreground, $background, 15%);
  $tabGradient: linear-gradient(to bottom, $tabHoverColor, $tabColor);

  $activeTabColor: map-get($colors, background);

  $primary: map-get($colors, primary);
  $tabBackgroundGradient: linear-gradient(to bottom, mix($foreground, $background, 3%), mix($foreground, $background, 10%));

  vx-tabs {
    color: $foreground;

    .tabs {
      background: $primary;
      background: $tabBackgroundGradient;
      border: 1px solid $borderColor;
      border-bottom: none;

      &:after {
        background: $borderColor;
      }
    }

    .tabContent {
      background: $activeTabColor;
      border: 1px solid $borderColor;
      border-top-width: 0;
    }

    .tab {
      background: $tabColor;
      background: $tabGradient;
      border-top: 1px solid $borderColor;

      &.active {
        background: $activeTabColor
      }
      &:not(.active):hover {
        background: $tabHoverColor;
      }

      &:not(.active):active {
        background: $tabActiveColor;
      }

      &:after {
        border-right: 1px solid $borderColor;
      }
      &:before {
        border-left: 1px solid $borderColor;
      }

    }
  }
}

// Use this mixin to apply colored themes to the dropdown
@mixin vx-dropdown-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $primary: map_get($colors, primary);
  $border: map_get($colors, borderLight);
  $lighterBgFg: map_get($colors, lighterBgFg);
  $darkerBgFg: map_get($colors, darkerBgFg);
  $focused: mix($foreground, $background, 6%);

  vx-dropdown, vx-menu {
    color: $foreground;
    border: 1px solid $border;
    box-shadow: 0 2px 10px 0 transparentize($foreground, .75);
    background: $background;

    vx-item {
      background: $background;

      &:not(:first-child) {
        border-top: 1px solid $border;
      }

      &:hover {
        background: $focused;
      }

      &:focus, &.focused {
        outline: none;
        background: $focused;
        font-weight: bold;
      }

      &:active, &.active {
        background: $primary;
        color: $background;
      }
    }

  }

}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-autocomplete-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);

  $background: map_get($colors, background);
  $primary: map_get($colors, primary);
  $foreground: map_get($colors, foreground);
  $error: map_get($colors, error);
  $darkerBgFg: map_get($colors, darkerBgFg);
  $iconColorDown: map_get($colors, borderDark);

  vx-autocomplete, vx-select {
    .hasFocus .container {
      box-shadow: 0 -1px 3px 0 transparentize($darkerBgFg, 0.75)
    }

    .downArrow {
      border-color: $iconColorDown transparent transparent transparent;
    }

  }

  .autocompleteMenu {
    box-shadow: 0 3px 3px 0 transparentize($darkerBgFg, .75);
    border: 1px solid $primary;
  }
  .autocompleteMenu.invalid {
    border-color: $error;
  }
}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-button-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);

  $hoverColor: mix($foreground, $primary, 15%);
  $primaryGradient: linear-gradient(to bottom, $primary, $hoverColor);
  $activeColor: mix($foreground, $primary, 25%);

  // Basic button styles
  .vx-button {
    background: $primaryGradient;
    color: $background;

    &:focus {
      box-shadow: 0 0 2px 1px transparentize($primary, .5);
    }

    &:hover {
      background: $hoverColor;
    }

    &:active {
      background: $activeColor;
    }

    &.vx-button-group-selected-button {
      background: $activeColor;
    }
  }

  // Variation styles

  $accent: map_get($colors, accent);
  $accentHoverColor: mix($foreground, $accent, 15%);
  $accentGradient: linear-gradient(to bottom, $accent, $accentHoverColor);
  $accentActiveColor: mix($foreground, $accent, 25%);

  .vx-button[vx-accent] {
    background: $accentGradient;
    &:focus {
      box-shadow: 0 0 2px 1px transparentize($accent, .5);
    }

    &:hover {
      background: $accentHoverColor;
    }

    &:active {
      background: $accentActiveColor;
    }
    &.vx-button-group-selected-button {
      background: $accentActiveColor;
    }
  }

  .vx-button[vx-flat] {
    background: $primary;
    &:hover {
      background: $hoverColor;
    }

    &:active {
      background: $activeColor;
    }

    &.vx-button-group-selected-button {
      background: $activeColor;
    }
  }

  .vx-button[vx-flat][vx-accent] {
    background: $accent;
    &:hover {
      background: $accentHoverColor;
    }

    &:active {
      background: $accentActiveColor;
    }

    &.vx-button-group-selected-button {
      background: $accentActiveColor;
    }
  }

  $dark: mix($foreground, $background, 40%);
  $darkHoverColor: mix($foreground, $dark, 15%);
  $darkGradient: linear-gradient(to bottom, $dark, $darkHoverColor);
  $darkActiveColor: mix($foreground, $dark, 25%);

  .vx-button[vx-dark] {
    background: $darkGradient;

    &:focus {
      box-shadow: 0 0 2px 1px transparentize($dark, .5);
    }

    &:hover {
      background: $darkHoverColor;
    }

    &:active {
      background: $darkActiveColor;
    }

    &.vx-button-group-selected-button {
      background: $darkActiveColor;
    }
  }

  .vx-button[vx-dark][vx-flat] {
    background: $dark;

    &:hover {
      background: $darkHoverColor;
    }

    &:active {
      background: $darkActiveColor;
    }

    &.vx-button-group-selected-button {
      background: $darkActiveColor;
    }
  }

}

@mixin vx-dialog-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $lighterBgFg: map_get($colors, lighterBgFg);
  $darkerBgFg: map_get($colors, darkerBgFg);

  .vxDialog {
    .overlay {
      background: transparentize($darkerBgFg, .8);
    }
    .content {
      background-color: $background;
      color: $foreground;
      box-shadow: 0 10px 20px 3px transparentize($darkerBgFg, .9), 0 10px 45px 8px transparentize($darkerBgFg, .9);
    }
    [vx-dialog-content] {
      display: block;
      overflow: auto;
      flex: 1;
      margin: 0 -20px;
      padding: 0 20px;
      max-height: 65vh;
    }
    [vx-dialog-title] {
      margin: 0 0 15px;
      font-weight: 500;
      display: block;
    }
    [vx-dialog-actions] {
      margin: 15px -8px -5px 0;
      flex-wrap: wrap;
      display: flex;
      justify-content: flex-end;
      button {
        margin-right: 8px;
      }
    }
  }
}

// Use this mixin to apply colored themes to the radio
@mixin vx-radio-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $border: mix($foreground, $background, 40%);

  vx-radio-button {
    &:hover .outline {
      background: mix($foreground, $background, 3%)
    }
    &:active .outline {
      background: mix($foreground, $background, 10%)
    }

    &:focus .outline {
      box-shadow: 0 0 2px 1px transparentize($primary, .5);
    }

    .outline {
      border: 2px solid $border;
    }
    .circle {
      background: $primary;
    }
  }

  vx-radio-group[vx-accent] vx-radio-button, vx-radio-button[vx-accent] {
    .circle {
      background: $accent;
    }
    &:focus .outline {
      box-shadow: 0 0 2px 1px transparentize($accent, .5);
    }
  }

}

@mixin vx-toast-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);

  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $error: map_get($colors, error);
  $warn: map_get($colors, warn);
  $success: map_get($colors, success);
  $border: mix($foreground, $background, 40%);

  .vx-toast-container {
    position: absolute;
    &[class*=" top-"] {
      top: 0;
      .toast {
        margin-top: 6px;
      }
    }
    &[class*=" bottom-"] {
      bottom: 0;
      .toast {
        margin-bottom: 6px;
      }
    }
    &[class*="-left"] {
      left: 0;
    }
    &[class*="-right"] {
      right: 0;
    }
    &[class*="-middle"] {
      left: 0;
      width: 100%;
      text-align: center;
    }

    .toast {
      background: $error;
      color: $background;
      box-shadow: 0 0 12px transparentize($foreground, .75);
      &.warn {
        background: $warn;
      }
      &.error {
        background: $error;
      }
      &.info {
        background: $primary;
      }
      &.success {
        background: $success;
      }
    }
    .closeButton {
      text-shadow: 0 1px 0 $background;
    }
  }

}

// Use this mixin to apply colored themes to the stepper
@mixin vx-stepper-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);

  $line: mix($foreground, $background, 10%);
  $hover: transparentize($foreground, .95);
  $active: transparentize($foreground, .88);
  $gray: mix($foreground, $background, 37%);

  vx-stepper {
    .vx-step-header-line {
      border-color: $line;
    }
    vx-step-header {
      &:hover {
        background: $hover;
      }
      &:active {
        background: $active;
      }
      .status {
        color: $background;
        background: $gray;
        &.active {
          background: $primary;
        }
      }
      .disabled {
        opacity: .55;
      }
    }
  }
  .vx-step.vertical:not(.last):before {
    border-left: 1px solid $line;
  }

}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-spinner-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);

  vx-spinner {
    .circle:before {
      background-color: $primary;
    }
    &[vx-dark] .circle:before {
      background-color: black;
    }
    &[vx-light] .circle:before {
      background-color: white;
    }
    &[vx-accent] .circle:before {
      background-color: $accent;
    }
  }

}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-slide-toggle-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);

  vx-slide-toggle {
    .bar {
      background: transparentize($foreground, 0.75);
    }
    .handle {
      background: $background;
      box-shadow: 0 2px 1px -1px transparentize($foreground, 0.8),
      0 1px 1px 0 transparentize($foreground, 0.86),
      0 1px 3px 0 transparentize($background, 0.88);
    }

    .checked {
      .bar {
        background: transparentize($primary, 0.75);
      }
      .handle {
        background: $primary;
      }
    }
  }

}

// Use this mixin to apply colored themes to the checkbox
@mixin vx-slider-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $border: mix($foreground, $background, 40%);

  vx-slider {
    .bar {
      background: $border;

      &.fill {
        background: $primary;
      }
    }

    .handle {
      background: $primary;
    }
  }

}

// Use this mixin to apply colored themes to the radio
@mixin vx-pager-theme($colors: ()) {
  $colors: vx-prepare-colors($colors);
  $primary: map_get($colors, primary);
  $accent: map_get($colors, accent);
  $background: map_get($colors, background);
  $foreground: map_get($colors, foreground);
  $border: map_get($colors, borderLight);

  vx-pager {
    border: 1px solid $border;
  }

}

@mixin vx-load-themes($col: ()) {
  $colors: vx-prepare-colors($col);
  @include vx-checkbox-theme($colors);
  @include vx-tabs-theme($colors);
  @include vx-input-theme($colors);
  @include vx-dropdown-theme($colors);
  @include vx-autocomplete-theme($colors);
  @include vx-button-theme($colors);
  @include vx-dialog-theme($colors);
  @include vx-radio-theme($colors);
  @include vx-toast-theme($colors);
  @include vx-stepper-theme($colors);
  @include vx-spinner-theme($colors);
  @include vx-slide-toggle-theme($colors);
  @include vx-slider-theme($colors);
  @include vx-pager-theme($colors);
}

.vx-visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.vx-overlay-modal {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 999;
  display: flex;
  justify-content: center;
  align-items: center;
}

.vx-overlay {
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  z-index: 999;
  -webkit-tap-highlight-color: transparent;
}

$colors: ();

$colors: vx-prepare-colors($colors);
@include vx-load-themes($colors);

$primary: map_get($colors, primary);
$background: map_get($colors, background);
$foreground: map_get($colors, foreground);
$error: map_get($colors, error);
$success: map_get($colors, success);
$warn: map_get($colors, warn);
$accent: map_get($colors, accent);
$darkerBgFg: map_get($colors, darkerBgFg);
$lighterBgFg: map_get($colors, lighterBgFg);
$borderLight: map_get($colors, borderLight);
$borderDark: map_get($colors, borderDark);

pre {
  margin: 0;
}

body {
  background: $background;
  color: $foreground;
  font-family: sans-serif;
  margin: 0;
  overflow-y: scroll;
  -webkit-overflow-scrolling: touch;
}

h4 {
  margin-top: 15px;
  margin-bottom: 8px;
}

.padTop {
  padding-top: 10px;
}

vx-tab > p:first-child {
  margin-top: 0;
}

.sidebar {
  background: mix($lighterBgFg, $darkerBgFg, 30%);

  .links a {
    border-top: 1px solid mix($background, $foreground, 75%);
    color: white;
  }
}

.page-header {
  background: $primary;
  color: $background;
  box-shadow: 0 0 10px 1px transparentize($foreground, .5);
  &.inner {
    border-right: 2px solid mix($foreground, $primary, 35%);
  }
}

@media screen and (max-width: 475px) {
  .page-menu, .page-menu:before, .page-menu:after {
    background: $background;
  }
}
